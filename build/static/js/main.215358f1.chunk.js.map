{"version":3,"sources":["components/Chart.jsx","components/Charts.jsx","hooks/useLocalStorage.js","hooks/useDarkMode.js","components/Navbar.jsx","components/Coins.js","index.js"],"names":["Chart","sparklineData","formattedData","map","price","idx","timeToSubtract","value","date","moment","subtract","format","length","filter","data","react_default","a","createElement","es6","width","height","type","dataKey","stroke","strokeDasharray","interval","Charts","coinData","className","coin","key","name","symbol","src","image","alt","components_Chart","sparkline_in_7d","useLocalStorage","initVal","_useState","useState","item","window","localStorage","getItem","JSON","parse","_useState2","Object","slicedToArray","storedValue","setStoredValue","setItem","stringify","useDarkMode","_useLocalStorage","_useLocalStorage2","dark","setDark","useEffect","bodySel","document","querySelector","classList","add","remove","Navbar","props","_useDarkMode","_useDarkMode2","darkMode","setDarkMode","react_router_dom","exact","to","onClick","e","preventDefault","setStrokeColor","Coins","strokeColor","coinList","setCoinList","_useLocalStorage3","_useLocalStorage4","coinChoice","setCoinChoice","_useLocalStorage5","_useLocalStorage6","coinInfo","setCoinInfo","axios","get","then","response","catch","err","console","log","concat","formatMoney","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","substr","replace","slice","onSubmit","target","coinType","htmlFor","id","disabled","large","market_data","current_price","usd","price_change_24h_in_currency","high_24h","low_24h","ath","market_cap","links","href","homepage","description","en","sparkline_7d","App","setCoinData","res","components_Navbar","react_router","path","render","components_Charts","assign","components_Coins","rootElement","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.215358f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nconst Chart = ({ sparklineData }) => {\r\n  const formattedData = sparklineData\r\n    .map((price, idx) => {\r\n      if (idx % 6 === 0) {\r\n        const timeToSubtract = 168 - idx;\r\n        const date = moment()\r\n          .subtract(timeToSubtract, \"hours\")\r\n          .format(\"ddd h:mma\");\r\n        return { value: price, date };\r\n      } else if (idx === sparklineData.length - 1) {\r\n        const date = moment().format(\"ddd h:mma\");\r\n        return { value: price, date };\r\n      }\r\n      return null;\r\n    })\r\n    .filter(data => data);\r\n\r\n  return (\r\n    <LineChart width={1100} height={300} data={formattedData}>\r\n      <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n      <XAxis dataKey=\"date\" interval={3} />\r\n      <YAxis />\r\n      <Tooltip />\r\n    </LineChart>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst Charts = ({ coinData }) => {\r\n  return (\r\n    <div className=\"charts\">\r\n      {coinData.map(coin => (\r\n        <div className=\"chart__container\" key={coin.name}>\r\n          <h2 className=\"coin__title\">{coin.name}</h2>\r\n          <h4 className=\"coin__symbol\">{coin.symbol}</h4>\r\n          <div className=\"coin__logo\">\r\n            <img src={coin.image} height=\"40\" alt={coin.name} />\r\n          </div>\r\n          <Chart sparklineData={coin.sparkline_in_7d.price} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Charts;\r\n","import {useState} from 'react'\r\n    // we need a key (must be a string) and a value (can be anything)\r\n        // add key and initialValue as parameters to the hook\r\nconst useLocalStorage = (key, initVal) => {\r\n\r\n    // Set up a state property called storedValue\r\n    // This state property is going to take a function as it's initial value\r\n    // callback function returns is what gets set as the intialValue for the state property.\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n\r\n        // Check to see if the item we passed in already exists in localStorage\r\n        const item = window.localStorage.getItem(key)\r\n        // return that value, otherwise we'll return whatever initialValue was passed in\r\n        return item? JSON.parse(item) : initVal;\r\n    });\r\n    const setValue = value =>  {\r\n        setStoredValue(value);\r\n       \r\n        window.localStorage.setItem(key, JSON.stringify(value))\r\n    };\r\n    return [storedValue, setValue];\r\n}\r\nexport default useLocalStorage\r\n\r\n // if you pass in arrays or objects to localStorage, you will need to parse it into JSON","import {useEffect} from 'react';\r\nimport useLocalStorage  from  '../hooks/useLocalStorage';\r\n\r\nconst useDarkMode = () => {\r\n    const [dark, setDark] = useLocalStorage('darkSetting', false)\r\n\r\n    useEffect(() => {\r\n        const bodySel = document.querySelector('body');\r\n\r\n        if (dark === true) {\r\n            bodySel.classList.add('dark-mode');\r\n        } else {\r\n            bodySel.classList.remove('dark-mode');\r\n        }\r\n    }, [dark])\r\n\r\n    return[dark, setDark]\r\n\r\n}\r\n\r\nexport default useDarkMode","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useDarkMode from '../hooks/useDarkMode'\r\n\r\nconst Navbar = (props) => {\r\n  //Hook replaced useState\r\n  const [darkMode, setDarkMode] = useDarkMode(false);\r\n  const toggleMode = e => {\r\n    e.preventDefault();\r\n    setDarkMode(!darkMode);\r\n\r\n    darkMode? props.setStrokeColor('#8884d8') : props.setStrokeColor('#F7931A')\r\n  };\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>Crypto Tracker</h1>\r\n      <NavLink exact to='/'>All Coins</NavLink>\r\n      <NavLink to='/coins'>More Coin Info</NavLink>\r\n      <div className='toggle-cta'>\r\n      <div className='toggle-label'> change color theme</div>\r\n      <div className=\"dark-mode__toggle\">\r\n    <div\r\n         onClick={toggleMode}\r\n         className={darkMode ?'toggle toggled' : 'toggle'}\r\n        />\r\n      </div>\r\n      </div>\r\n      \r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Chart from './Chart';\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\nconst Coins =({ strokeColor}) => {\r\n    const [coinList, setCoinList] = useLocalStorage('coinList', []);\r\n    const [coinChoice, setCoinChoice] = useLocalStorage('coinChoice', 'bitcoin');\r\n    const [coinInfo, setCoinInfo] = useLocalStorage('coinInfo', {});\r\n\r\n    useEffect(() => {\r\n        axios.get('https://api.coingecko.com/api/v3/coins/list')\r\n            .then(response => {\r\n                //console.log(response.data);\r\n                setCoinList(response.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [coinList, setCoinList]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.coingecko.com/api/v3/coins/${coinChoice}?localization=false&tickers=false&market_data=true&sparkline=true`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setCoinInfo(response.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [coinChoice]);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setCoinChoice(e.target.coinType.value);\r\n        // console.log(e.target.coinType.value);\r\n    }\r\n\r\n    const formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\r\n        try {\r\n          decimalCount = Math.abs(decimalCount);\r\n          decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\r\n      \r\n          const negativeSign = amount < 0 ? \"-\" : \"\";\r\n      \r\n          let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\r\n          let j = (i.length > 3) ? i.length % 3 : 0;\r\n      \r\n          return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      };\r\n\r\n    return (\r\n        \r\n        <div>\r\n        <div  className='coin-wrap'>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor='coinType'>Choose a Coin:</label>\r\n                <select id='coinType' name='coinType'>\r\n                    <option value='' disabled>Cyptocurrency Choice:</option>\r\n                {coinList.map(coin => {\r\n                return (\r\n                    <option key={coin.id} value={coin.id}>{coin.name}</option>\r\n                )\r\n            })}\r\n                </select>\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n            <div>\r\n                <h2>About {coinInfo.name}</h2>\r\n                {coinInfo.image? <div className='imgContainer'><img className='coin__logo' src={coinInfo.image.large} alt='coin type' /></div> : null}\r\n                {coinInfo.market_data? <div><h3><span className='bold'>Today's Price:</span> ${coinInfo.market_data.current_price.usd} usd</h3> \r\n                    <p><span className='bold'>Price Change in Last 24 Hours:</span> ${formatMoney(coinInfo.market_data.price_change_24h_in_currency.usd)} usd</p>\r\n                    <p><span className='bold'>24h Low / 24h High:</span> ${formatMoney(coinInfo.market_data.high_24h.usd)} / ${formatMoney(coinInfo.market_data.low_24h.usd)} usd</p>\r\n                    <p><span className='bold'>All Time High (ATH):</span> ${formatMoney(coinInfo.market_data.ath.usd)} usd</p>\r\n                    <h3><span className='bold'>Market Cap:</span> ${formatMoney(coinInfo.market_data.market_cap.usd)} usd</h3>\r\n                    \r\n                    </div>\r\n                    : null}<div className=\"desc-wrap\">\r\n                {coinInfo.links? <a  href={coinInfo.links.homepage[0]}>{coinInfo.links.homepage[0]}</a> : null}\r\n                {coinInfo.description? <div className=\"coin-a\"><p>{coinInfo.description.en}</p></div> : null }\r\n                </div>\r\n            </div>\r\n            </div>\r\n          <div className='chart-wrap'> {coinInfo.market_data? <Chart sparklineData={coinInfo.market_data.sparkline_7d.price} strokeColor={strokeColor} /> : null }\r\n          </div> \r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Coins;","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nimport Charts from \"./components/Charts\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Coins from './components/Coins';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst App = () => {\r\n  const [coinData, setCoinData] = useState([]);\r\n  const [strokeColor, setStrokeColor] =useLocalStorage('strokeColor', '#8884d8');\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true\"\r\n      )\r\n      .then(res => setCoinData(res.data))\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar strokeColor={strokeColor} setStrokeColor={setStrokeColor}/>\r\n      <Route exact path='/' render={props => {\r\n        return <Charts {...props} coinData={coinData} strokeColor={strokeColor} />\r\n      }} />\r\n      <Route path='/coins' render={ props => {\r\n        return <Coins {...props} strokeColor={strokeColor} />\r\n      }} />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Router><App /></Router>, rootElement);\r\n"],"sourceRoot":""}